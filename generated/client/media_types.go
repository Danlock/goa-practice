// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "practice": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/danlock/goa-practice/design
// --out=$(GOPATH)/src/github.com/danlock/goa-practice/generated
// --version=v1.3.1

package client

import (
	"net/http"
)

// Status  of API and connections to remote services (default view)
//
// Identifier: application/vnd.status+json; view=default
type Status struct {
	// Is database connected and working?
	Database bool `form:"database" json:"database" xml:"database"`
	// Is queue connected and working?
	Queue bool `form:"queue" json:"queue" xml:"queue"`
}

// Validate validates the Status media type instance.
func (mt *Status) Validate() (err error) {

	return
}

// DecodeStatus decodes the Status instance encoded in resp body.
func (c *Client) DecodeStatus(resp *http.Response) (*Status, error) {
	var decoded Status
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
